12/05
1. Criei o hook useSceneData que irá servir para sempre atualizar a cena no back-end.
2. Fiz o redirecionamento correto da pagina description_table para o gm, além de fazer as buscas necessárias para acessa-la.
3. Armazenei tanto o id da mesa quando da cena no localStorage.
4. Fiz a consulta da Cena tanto para os players quando para o Game Master, para que eu possa utilizar quando precisar manipular.
os dados no kanva do konva.
5. Criei esse log, por que ai eu não fico perdido.
OBS: 
    Ainda preciso mexer no update, para ter certeza que ele funciona corretamente.
    Preciso decidir como limitar o acesso do player a algumas funcionalidades.
13/05:
1. Criei o ConfirmModal e o ConfirmModalInfo
2. Fiz a desativação do Usuário
3. Fiz a Verificação do login, para se o usuário está ativado ou não.
4. Fiz a Deleção da Table

15/05:
1. Consegui retornar a Scene para a tela do Canva, o problema foi que eu não coloquei a Scene no root.Module

16/05
1. Fiz o Stage básico para vizualizar a Scene
2. Fiz o modal de atualização das cenas
3. Fiz a atualização das Cenas no back-end
OBS: Meu próximo passo será atualizar em tempo real, a modificação de tamanho da Cena.

17/05:
1. Fiz a atualização em Tempo Real.
2. Corriji o bug de que os campos do change_grid_modal não eram atualizados depois de alguma alteração já ser feita na scene.

19/05:
Precisam ser feitas até final de junho:
1. Descobrir como armazenar imagens no MySQL
2. Fazer o sistema de convites de gm para player
3. WebSocket
4. Interfaces
25/05:
1. Usei Multer para a criação de diretórios de forma local.
2. Fiz o componente "UploadImage" para fazer o Upload.
3. Fiz as estilizações dos Modais, criando três principais componentes estilizados, dentro de modal.style.tsx temos: Overlay, ModalConteiner e CloseButton.
4. A imagem está sendo armazenada corretamente, tanto no diretório quanto no id do usuário. Também percebi que por padrão
se a imagem enviada e salva tem o mesmo nome onde ela está sendo guardada, ele não cria uma imagem nova.
Para os próximos passos, eu preciso conseguir retornar imagens para o front-end para renderiza-las, será uma operação bem pesada mas no momento estou pensando assim:
1. Retornarei dois vetores para o front-end, o primeiro retornarei as imagens o segundo será os objetos com as especificações(posição da imagem e etc)
2. Eu terei de fazer o seguinte, percorrerei o vetor de objetos e então irei verificar a posição de cada um deles e quais arquivos eles são referentes 
para assim fazer a renderização no TableTop.
